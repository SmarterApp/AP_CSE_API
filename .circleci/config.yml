node_defaults: &node
  docker:
    - image: circleci/node

dev_filter: &devOnly
  branches:
    only: ci/CSE-309-continuous-deployment

get_latest_version: &getVersion
  name: Set TAG_VERSION and update PATH
  command: >
    echo 'export TAG_VERSION=$((git describe --tags $(git rev-list
    --tags --max-count=1)) | cut -c 2-)' >> $BASH_ENV

    source $BASH_ENV

version: 2
jobs:
  build:
    <<: *node
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm ci
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
      - run:
          name: Compile Typescript
          command: npm run build

  unit_tests:
    docker:
      - image: circleci/node
        environment:
          COVERALLS_SERVICE_NAME: circle-ci
          COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Run unit tests
          command: npm run test-ci
      - run:
          name: Report code coverage
          command: npm run report-coverage
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports/jest

  lint:
    <<: *node
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Run TSLint
          command: npm run lint

  increment_version:
    <<: *node
    steps:
      - checkout
      - run:
          name: Run semantic-release
          command: npx semantic-release

  push_image:
    machine: true
    steps:
      - checkout
      - run: *getVersion
      - run:
          name: Log in to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build image
          command: 'docker build -t osucass/content-specificication-explorer-api:$TAG_VERSION .'
      - run:
          name: Push image to Docker Hub
          command: 'docker push osucass/content-specification-explorer-api:$TAG_VERSION'

  deploy:
    docker:
      - image: dtzar/helm-kubectl
    steps:
      - checkout
      - run: *getVersion
      - run:
          name: Create .kube directory
          command: mkdir ~/.kube
      - run:
          name: Decode kubeconfig
          command: echo $CSE_KUBE_CONFIG | base64 -d > ~/.kube/config
      - run:
          name: Initialize Helm
          command: helm init --client-only
      - run:
          name: Upgrade cluster deployment
          environment:
            CHART_VERSION: 0.1.0
          command: >-
            helm upgrade --namespace=cse --set-string image.tag=$TAG_VERSION cse
            https://osu-cass.github.io/AP-CSE-Chart/charts/content-specification-explorer-${CHART_VERSION}.tgz

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - unit_tests:
          requires:
            - build
      - lint:
          requires:
            - build
      - increment_version:
          filters: *devOnly
          requires:
            - unit_tests
      - push_image:
          filters: *devOnly
          requires:
            - increment_version
      - deploy:
          filters: *devOnly
          requires:
            - push_image
