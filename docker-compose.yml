version: '3.1'
services:
  api:
    env_file:
      - ./.env
    build:
      dockerfile: './Dockerfile-dev'
      context: .
    container_name: express
    command: npm run debug
    volumes:
      - ./dist:/server/dist
    networks:
      - db
      - elastic
    ports:
      - 3000:3000
      - 9222:9222
  mongo:
    image: 'mongo:4'
    container_name: mongo
    restart: always
    networks:
      - db
    volumes:
      - mongodata:/usr/share/mongo/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on:
      - mongo
    restart: always
    ports:
      - 8081:8081
    networks:
      - db
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - elastic
    ports:
      - '5601:5601'
  logstash:
    image: docker.elastic.co/logstash/logstash:6.3.2
    container_name: logstash
    environment:
      XPACK_MONITORING_ENABLED: 'false'
    depends_on:
      - elasticsearch
    secrets:
      - source: logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
    networks:
      - elastic
  jaeger-collector:
    image: jaegertracing/jaeger-collector:latest
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
    ports:
      - '14267:14267'
      - '14268:14268'
      - '9411:9411'
    depends_on:
      - elasticsearch
    container_name: jaeger-collector
    hostname: jaeger-collector
    restart: on-failure
    networks:
      - elastic
    command: ['--es.server-urls=http://elasticsearch:9200']
  jaeger-agent:
    image: jaegertracing/jaeger-agent:latest
    ports:
      - '5775:5775/udp'
      - '5778:5778'
      - '6831:6831/udp'
      - '6832:6832/udp'
    depends_on:
      - jaeger-collector
    restart: on-failure
    container_name: jaeger-agent
    hostname: jaeger-agent
    networks:
      - elastic
    command: ['--collector.host-port=jaeger-collector:14267']
  jaeger-query:
    image: jaegertracing/jaeger-query:latest
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
    ports:
      - 16686:16686
    depends_on:
      - jaeger-agent
    restart: on-failure
    container_name: jaeger-query
    hostname: jaeger-query
    networks:
      - elastic
    command: ['--es.server-urls=http://elasticsearch:9200', '--log-level=debug']

secrets:
  logstash.conf:
    file: ./config/logstash.conf
volumes:
  ? miniodata
  ? elasticdata
  ? mongodata

networks:
  ? db
  ? elastic
