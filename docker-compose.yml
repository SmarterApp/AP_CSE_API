version: '3'
services:
  api:
    build: 
      dockerfile: Dockerfile-dev
      context: .
    container_name: express
    command: npm run dev
    volumes:
      - ./dist:/api/dist
      - ./src:/api/src
    networks:
      - db
      - es
    ports:
      - 3000:3000
  mongo:
    image: "mongo:4"
    container_name: mongo
    restart: always
    networks: 
      - db
    volumes:
      - mongodata:/usr/share/mongo/data
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks: 
      - db
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  minio:
    image: minio/minio:RELEASE.2018-08-02T23-11-36Z
    container_name: minio
    volumes:
      - miniodata:/usr/share/minio/data
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks: 
      - es
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    networks: 
      - es
    ports: 
      - 5601:5601

volumes: 
  miniodata:
  esdata:
  mongodata:

networks: 
  db:
  es:
